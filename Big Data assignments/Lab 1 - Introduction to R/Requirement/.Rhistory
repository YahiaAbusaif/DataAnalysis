#Lab 1 Introduction to R Language
#--------------------------------------------------------------------------------#
#clean environment
rm(list=ls())
#Lab 1 Introduction to R Language
#--------------------------------------------------------------------------------#
#clean environment
rm(list=ls())
#display work items
ls()
#get working directory
getwd()
#--------------------------------------------------------------------------------#
#Getting Started#
str <- "Hello World"
print(str)
#vectors in R
#There are six data types of these atomic vectors:
v1 <- c(1,2,3,4.5,2,3) #numeric
v2 <- c("tree","street","car") #character
v3 <- c(TRUE , FALSE ,TRUE) #logical
v4 <- c(23L, 192L, 0L) #integer
v5 <- c(3+2i, 4-5i, -2i) #complex
v6 <- charToRaw("Hello") #raw
#Question:
v7 <- c("data", 22.5, TRUE) #What will be the type of v7?
#Extracting elements
#(1)
#Positive integers return elements at the specified positions (even if duplicate):
#=================================================================================
v1 <- c(10, 20, 30, 40, 50, 60)
v1[2]
v1[c(2,4)]
v1[c(4,4)]
v1[2:5]
v1[5:2]
v1[c(2.2,3.6)]  #Real numbers are silently truncated to integers.
#(2)
#Negative integers omit elements at the specified positions:
#============================================================
v1 <- v1[-3]
v1[-c(2,1)]
v1
#(3)
#Logical Vectors
#=================
v1 <- c(1,2,3,4.5,3,2)
v1>2
v1==2
v1!=2
v1[v1>2]
2%in%v1
9%in%v1
#If the logical vector is shorter than the vector being subsetted,
#it will be recycled to be the same length.
v1[v3]
v2[v3]
#(4) Sorting vectors and displaying information
#=============================================
#Sort elements.
sort(v1)
#Display vectors' information
str(v1)
#Display summary of vectors (mean, median, min, max, 1st and 3rd quartiles)
summary(v1)
#(5)Assignment and vector manipulation
v4 <- v1[c(2,4)]
v1[3] -> v5
v6 = v4 + 2
v7<- v1+v4  #broadcasting
#--------------------------------------------------------------------------------#
#(5)Factors
#============================================
f <- factor(v1)
f
v8 <- c(v2, "car", "plane")
factor(v8)
#(6)lists
#============================================
list1 <- list(2,'car',TRUE)
list1
list1[[1]]
list1[1]
list1[[1]]
#Notice the difference
list2 <- c(2,'car',TRUE)
list2
l <- list(v1,v2)
l
summary(l)
str(l)
l[1]
l[2]
l[[1]]
l[[1]][4]
#Structured Data Types
#============================================
#(7) Matrix
#============
cells <- seq(10,90,by=10)
cells
rnames <- c("R1", "R2","R3")
cnames <- c("C1", "C2","C3")
mymatrix <- matrix(cells, nrow = 3, ncol = 3, byrow =TRUE, dimnames = list(rnames, cnames))
mymatrix
#second column
mymatrix[,2]
#or equivalently
mymatrix[,"C2"]
#second and third column
mymatrix[,c("C2","C3")]
#first row
mymatrix[1,]
#all matrix except second row
mymatrix[-2,]
mymatrix[1,-3]
#--------------------------------------------------------------------------------#
#(8) IMPORTANT: Data Frames
#============================
d <- c(1,2,3,4,4,4)
e <- c("red", "white", "red", NA,"red","red")
f <- c(TRUE,TRUE,TRUE,FALSE,FALSE,NA)
mydata <- data.frame(d,e,f)
colnames(mydata) <- c("ID","Color","Passed") # variable names
mydata
# identify elements in data frames
mydata[1,] #extract first row of the data frame
mydata[2] #extract the second column
mydata[,2]
mydata[c("ID","Color")] # columns ID and color from data frame
mydata$ID # variable ID in the data frame
mydata$Passed # variable Passed in the data frame
#Subsetting the dataframe based on one or more conditions.
subdfm<- subset(mydata, ID <= 3, select=c(ID,Color))
subdfm
subdfm<- subset(mydata, ID <= 3 & Color == 'red', select=c(ID,Color))
subdfm
#Can we write it in another way?
mydata[mydata$ID <= 3, c('ID', 'Color')]
#(9) IMPORTANT: Tables
#=======================
#Create contingency table
t<- table(mydata$ID)
t
mydata$ID
mydata
t
table(mydata$Color, mydata$Passed)
#(11)
#Importing data from csv files and reading data into a data frame
#================================================================
dfm <- read.csv("forestfires.csv")
dfm
#get dimensions of data frame
dim(dfm)
nrow(dfm)
ncol(dfm)
#visualize some of the data
head(dfm)
tail(dfm)
summary(dfm)
table(dfm$month)
table(dfm$month, dfm$day)
#--------------------------------------------------------------------------------#
#examples of importing files
#text files
dftxt <- read.table("testfile.txt",header = FALSE)
dftxt
#from csv file
dfcsv <- read.csv("csvone.csv",header = TRUE)
dfcsv
ncols(dfcsv)
ncol(dfcsv)
nrow(dfcsv)
plot(v1, type="b")  #Check the type of plot
#--------------------------------------------------------------------------------#
#(14) Flow control statements
#=============================
names <- c('Ali', 'Hussein', 'Ahmed')
#--------------------------------------------------------------------------------#
#(15)String Manipulation
#=======================
paste(names[1], names[2], names[3])
paste(names[1], names[2], names[3],  sep= "+")
toupper(names[1])
tolower(names[2])
attributes(dfcsv)
dfcsv
#clean environment
rm(list=ls())
#get working directory
getwd()
#set working directory
setwd("F:\\CMP 2020\\Big Data\\Lab 1 - Introduction to R\\Requirement")
df = read.csv("titanic.csv")
#Show the dimensions of the data frame
dim(df)
str(df)
df
df
str(df)
#Structure
str(df)
#first and the last ten rows in the dataset.
head(dfm)
#first and the last ten rows in the dataset.
head(df)
tail(df)
summary(df$Age)
#4
#================================================
age = df$Age
summary(age)
is.na(age)
summary(age)
df$Embarked
levels(df$Embarked)
df[df$Age != NA]
df[!is.na(df$Age)]
v1 = df$Embarked
v1 != ""
embarked = df$Embarked
#summary, 1st and 3rd Quartile
summary(age)
# NA
is.na(age)
# factors
levels(embarked)
df[!is.na(age)]
df[!is.na(age),]
df = df[!is.na(age),]
is.na(df$Age)
df$Embarked
df = df[embarked != ""]
df = df[embarked != "",]
is.na(df$Age)
df = df[!is.na(age),]
is.na(df$Age)
is.na(df$Age)
df = read.csv("titanic.csv")
# NA
is.na(age)
df = df[!is.na(age),]
# NA
is.na(age)
# NA
is.na(df$Age)
embarked
embarked[1]
embarked[2]
embarked[3]
df = df[embarked != "",]
# NA
is.na(df$Age)
df$Embarked
df = read.csv("titanic.csv")
#4
#================================================
age = df$Age
embarked = df$Embarked
df = df[!is.na(age) & embarked != "",]
is.na(df$Age)
levels(df$Embarked)
embarked != ""
levels(df$Embarked)
df$Embarked
df$Embarked != ""
df$Embarked != ""
df = read.csv("titanic.csv")
df$Embarked != ""
is.na(df$Age)
#4
#================================================
age = df$Age
embarked = df$Embarked
df = df[!is.na(age) & embarked != "",]
df$Embarked != ""
is.na(df$Age)
df = read.csv("titanic.csv")
# NA
is.na(age)
# factors
embarked != ""
levels(embarked)
df = df[!is.na(age) & embarked != "",]
#clean environment
rm(list=ls())
#get working directory
getwd()
#set working directory
setwd("F:\\CMP 2020\\Big Data\\Lab 1 - Introduction to R\\Requirement")
df = read.csv("titanic.csv")
#3
#================================================
#Show the dimensions of the data frame
dim(df)
#Structure
str(df)
#first and the last ten rows in the dataset.
head(df)
tail(df)
#Summary
summary(df)
#4
#================================================
#summary, 1st and 3rd Quartile
summary(df$Age)
# NA
is.na(df$Age)
# factors
df$Embarked != ""
levels(df$Embarked)
df = df[!is.na(df$Age) & df$Embarked != "",]
is.na(df$Age)
# factors
df$Embarked != ""
levels(df$Embarked)
df = df[, !(names(df) %in% c("Cabin", "Ticket"))]
str(df)
dim(df)
t = table(df$Gender)
t
t[1]
t = table(df$Gender)
females = t[1]
males = t[2]
pie(t, main="Pie Chart of Countries")
pie(t, main="Pie Chart of Gender")
pie(t, col=c("red", "blue"), main="Pie Chart of Gender")
t2 = table(df$Gender, df$Survived)
t2
t2[2]
t2[1]
t2[,2]
pie(t[,2], col=c("red", "blue"), main="Pie Chart of Survivors")
pie(t2[,2], col=c("red", "blue"), main="Pie Chart of Survivors")
t1 = table(df$Gender)
t1
pie(t1, col=c("red", "blue"), main="Pie Chart of Gender")
t2 = table(df$Gender, df$Survived)
t2
#More females survived
pie(t2[,2], col=c("red", "blue"), main="Pie Chart of Survivors")
t3 = table(df$Pclass, df$Survived)
t3
barplot(t3)
t3 = table(df$Survived, df$Pclass)
t3
barplot(t3)
barplot(t3, col=c("blue","red"))
barplot(t3, col=c("blue","red"), main="Class vs Survivors")
pie(t1, col=c("red", "blue"), main="Count of Gender")
t2 = table(df$Gender, df$Survived)
t2
#More females survived
pie(t2[,2], col=c("red", "blue"), main="Gender vs Survivors")
t3 = table(df$Survived, df$Pclass)
t3
barplot(t3, col=c("blue","red"), main="Class vs Survivors")
barplot(t3, col=c("red", "blue"), main="Class vs Survivors")
barplot(t3, col=c("red", "blue"), main="Class vs Survivors", xlab="class")
barplot(t3, col=c("red", "blue"), main="Class vs Survivors", xlab="class", ylab="count")
boxplot(df$Age)
hist(df$Age)
hist(df$Age, col="darkblue")
boxplot(df$Age)
hist(df$Age, col="darkblue")
summary(df$Age)
boxplot(df$Age)
boxplot(df$Age, col="yellow")
str(df)
dim(df)
#7
#=======================================
write.csv(df, "titanic_preprocessed.csv")
#7
#=======================================
df = df[, names(df) %in% c("Name", "Survived")]
str(df)
write.csv(df, "titanic_preprocessed.csv")
dim(df)
#clean environment
rm(list=ls())
#get working directory
getwd()
#set working directory
setwd("F:\\CMP 2020\\Big Data\\Lab 1 - Introduction to R\\Requirement")
df = read.csv("titanic.csv")
#3
#================================================
#Show the dimensions of the data frame
dim(df)
#Structure
str(df)
#first and the last ten rows in the dataset.
head(df)
tail(df)
#Summary
summary(df)
#4
#================================================
#summary, 1st and 3rd Quartile
summary(df$Age)
# NA
is.na(df$Age)
# factors
df$Embarked %in% c("C", "Q", "S")
levels(df$Embarked)
df = df[!is.na(df$Age) & df$Embarked %in% c("C", "Q", "S"),]
is.na(df$Age)
# factors
df$Embarked %in% c("C", "Q", "S")
levels(df$Embarked)
df = df[, !(names(df) %in% c("Cabin", "Ticket"))]
dim(df)
str(df)
t1 = table(df$Gender)
t1
pie(t1, col=c("red", "blue"), main="Count of Gender")
t2 = table(df$Gender, df$Survived)
t2
#More females survived
pie(t2[,2], col=c("red", "blue"), main="Gender vs Survivors")
t3 = table(df$Survived, df$Pclass)
t3
#The lower the class, the more victims exist
barplot(t3, col=c("red", "blue"), main="Class vs Survivors", xlab="class", ylab="count")
boxplot(df$Age, col="yellow")
summary(df$Age)
#graph for min,max,median, 1st and 3rd quartile
boxplot(df$Age, col="yellow")
hist(df$Age, col="darkblue")
#7
#=======================================
df = df[, names(df) %in% c("Name", "Survived")]
write.csv(df, "titanic_preprocessed.csv")
hist(df$Age, col="darkblue", main="Density Distribution", xlab="Age")
hist(df$Age, col="darkblue", main="Density Distribution")
hist(df$Age, col="darkblue")
#clean environment
rm(list=ls())
#get working directory
getwd()
#set working directory
setwd("F:\\CMP 2020\\Big Data\\Lab 1 - Introduction to R\\Requirement")
df = read.csv("titanic.csv")
#3
#================================================
#Show the dimensions of the data frame
dim(df)
#Structure
str(df)
#first and the last ten rows in the dataset.
head(df)
tail(df)
#Summary
summary(df)
#4
#================================================
#summary, 1st and 3rd Quartile
summary(df$Age)
# NA
is.na(df$Age)
# factors
df$Embarked %in% c("C", "Q", "S")
levels(df$Embarked)
df = df[!is.na(df$Age) & df$Embarked %in% c("C", "Q", "S"),]
is.na(df$Age)
# factors
df$Embarked %in% c("C", "Q", "S")
# still same levels ??????
levels(df$Embarked)
df = df[, !(names(df) %in% c("Cabin", "Ticket"))]
dim(df)
str(df)
t1 = table(df$Gender)
t1
pie(t1, col=c("red", "blue"), main="Count of Gender")
t2 = table(df$Gender, df$Survived)
t2
#More females survived
pie(t2[,2], col=c("red", "blue"), main="Gender vs Survivors")
t3 = table(df$Survived, df$Pclass)
t3
#The lower the class, the more victims exist
barplot(t3, col=c("red", "blue"), main="Class vs Survivors", xlab="class", ylab="count")
#graph for min,max,median, 1st and 3rd quartile
boxplot(df$Age, col="yellow")
df$Age
hist(df$Age, col="darkblue", main="Age Density Distribution", xlab="Age")
#7
#=======================================
df_processed = df[, names(df) %in% c("Name", "Survived")]
write.csv(df_processed, "titanic_preprocessed.csv")
